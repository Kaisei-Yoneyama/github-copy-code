env:
  DIRECTORY: .output
  PROJECT_NAME: github-copy-code

name: Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  Version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      version_changed: ${{ steps.version.outputs.version_changed }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Check version change
        id: version
        run: |
          PREV_VERSION=$(git show HEAD~1:package.json | jq -r .version)
          CURR_VERSION=$(jq -r .version package.json)

          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            VERSION_CHANGED=1
          else
            VERSION_CHANGED=0
          fi

          echo "version=$CURR_VERSION" >> "$GITHUB_OUTPUT"
          echo "version_changed=$VERSION_CHANGED" >> "$GITHUB_OUTPUT"

  Submit:
    needs: Version
    if: ${{ needs.Version.outputs.version_changed == '1' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Use Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Zip extensions
        run: npm run zip
      - name: Submit to stores
        run: |
          npx wxt submit \
            --chrome-zip ${{ env.DIRECTORY }}/${{env.PROJECT_NAME}}-${{ needs.Version.outputs.version }}-chrome.zip
        env:
          CHROME_EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
          CHROME_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      - name: Create Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.Version.outputs.version }}"
          name: "v${{ needs.Version.outputs.version }}"
          draft: false
          prerelease: false
          files: |
            ${{ env.DIRECTORY }}/${{env.PROJECT_NAME}}-${{ needs.Version.outputs.version }}-chrome.zip
